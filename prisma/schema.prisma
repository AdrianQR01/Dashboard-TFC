datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id                Int             @id @default(autoincrement())
  name              String
  surname           String
  email             String          @unique
  password          String        
  profilePicture    String?
  eventos           Evento[]
  clientes          Cliente[]
  servicios         Servicio[]
  presupuestos      Presupuesto[]
  ordenesDeEntrada  OrdenDeEntrada[]
  entradas          Entrada[]
  clientesEventos   ClienteEvento[]
}

model Evento {
  id                Int             @id @default(autoincrement())
  nombre            String
  fecha             DateTime
  ubicacion         String
  descripcion       String?
  estadoEvento      String
  usuarioId         Int
  usuario           Usuario         @relation(fields: [usuarioId], references: [id])
  servicios         Servicio[]
  presupuesto       Presupuesto[]
  ordenesDeEntrada  OrdenDeEntrada[]
  clientesEventos   ClienteEvento[]
  entradas          Entrada[]
}

model Cliente {
  id                Int             @id @default(autoincrement())
  nombre            String
  apellido          String
  sexo              String
  fechaNacimiento   DateTime
  email             String          @unique
  password          String
  telefono          String?
  usuarioId         Int
  usuario           Usuario         @relation(fields: [usuarioId], references: [id])
  clienteEventos    ClienteEvento[]
  ordenesDeEntrada  OrdenDeEntrada[]
}

model Servicio {
  id                Int             @id @default(autoincrement())
  nombre            String
  descripcion       String?
  costo             Float
  eventoId          Int
  evento            Evento          @relation(fields: [eventoId], references: [id])
  usuarioId         Int
  usuario           Usuario         @relation(fields: [usuarioId], references: [id])
}

model Presupuesto {
  id                Int             @id @default(autoincrement())
  total             Float
  nombrePresupuesto String
  estado            String
  fechaInicio       DateTime
  fechaFin          DateTime
  eventoId          Int             
  evento            Evento          @relation(fields: [eventoId], references: [id])
  usuarioId         Int
  usuario           Usuario         @relation(fields: [usuarioId], references: [id])
}

model OrdenDeEntrada {
  id                Int             @id @default(autoincrement())
  cantidad          Int
  precio            Float
  clienteId         Int
  cliente           Cliente         @relation(fields: [clienteId], references: [id])
  eventoId          Int
  evento            Evento          @relation(fields: [eventoId], references: [id])
  usuarioId         Int
  usuario           Usuario         @relation(fields: [usuarioId], references: [id])
  entradas          Entrada[]
}

model Entrada {
  id                Int             @id @default(autoincrement())
  precio            Float
  ordenDeEntradaId  Int
  estadoEntrada     String
  ordenDeEntrada    OrdenDeEntrada  @relation(fields: [ordenDeEntradaId], references: [id])
  eventoId          Int
  evento            Evento          @relation(fields: [eventoId], references: [id])
  usuarioId         Int
  usuario           Usuario         @relation(fields: [usuarioId], references: [id])
}

model ClienteEvento {
  id                Int             @id @default(autoincrement())
  clienteId         Int
  eventoId          Int
  cliente           Cliente         @relation(fields: [clienteId], references: [id])
  evento            Evento          @relation(fields: [eventoId], references: [id])
  usuarioId         Int
  usuario           Usuario         @relation(fields: [usuarioId], references: [id])

  @@index([clienteId, eventoId], name: "cliente_evento_idx")
}
